/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        vind {
            bindings = <&kp RG(S)>;
            key-positions = <28 29 30>;
        };

        firefox {
            bindings = <&kp LC(LA(LS(NUMBER_1)))>;
            key-positions = <29 30 31>;
        };

        Bufer {
            bindings = <&kp LG(V)>;
            key-positions = <41 42 43>;
        };

        DeleteExcel {
            bindings = <&kp LC(MINUS)>;
            key-positions = <14 15>;
        };

        DeleteGoogle {
            bindings = <&kp LC(LA(MINUS))>;
            key-positions = <13 14>;
        };

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <17 31>;
        };

        Langswitch {
            bindings = <&Langswitch>;
            key-positions = <15 16 17>;
        };
    };

    macros {
        Langswitch: Langswitch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT>, <&macro_press>, <&kp LEFT_SHIFT>;

            label = "LANGSWITCH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
          &kp ESC         &kp N1  &kp N2        &kp N3            &kp N4  &kp N5         &kp N6     &kp N7  &kp N8     &kp N9         &kp N0    &kp BACKSPACE
&kp LWIN  &kp TILDE       &kp Q   &kp W         &kp E             &kp R   &kp T          &kp Y      &kp U   &kp I      &kp O          &kp P     &kp LBKT               &kp RBKT
          &kp TAB         &kp A   &kp S         &kp D             &kp F   &kp G          &kp H      &kp J   &kp K      &kp L          &kp SEMI  &kp SQT
          &kp LEFT_SHIFT  &kp Z   &kp X         &kp C             &kp V   &kp B          &kp N      &kp M   &kp COMMA  &kp DOT        &kp FSLH  &mt RIGHT_SHIFT MINUS
                                  &kp LEFT_ALT  &kp LEFT_CONTROL  &sl 1   &lt 2 ENTER    &kp SPACE  &sl 2   &kp RCTRL  &kp RIGHT_ALT
            >;
        };

        raise_layer {
            bindings = <
           &trans        &kp F1      &kp F2      &kp F3       &kp F4        &kp F5          &kp F6      &kp F7      &kp F8      &kp F9        &kp F10     &kp F11
&kp LA(A)  &kp LEFT_WIN  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)   &kp LS(N4)    &kp LS(N5)      &kp LS(N6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)    &kp LS(N0)  &kp F12       &kp K_SLEEP
           &kp TAB       &kp N1      &kp N2      &kp N3       &kp N4        &kp N5          &kp N6      &kp N7      &kp N8      &kp N9        &kp N0      &kp LS(BSLH)
           &kp LSHFT     &kp EQUAL   &kp MINUS   &kp KP_PLUS  &kp LS(LBKT)  &kp LS(RBKT)    &kp LBKT    &kp RBKT    &kp SEMI    &kp LS(SEMI)  &kp BSLH    &kp RSHFT
                                     &kp LALT    &kp LCTRL    &trans        &kp ENTER       &kp SPACE   &trans      &kp LCTRL   &kp LALT
            >;
        };

        lower_layer {
            bindings = <
        &trans              &trans        &trans                  &trans                &trans                   &trans           &trans         &trans                     &trans          &trans               &trans             &kp BACKSPACE
&trans  &kp LWIN            &kp ASTERISK  &trans                  &kp LS(LC(UP_ARROW))  &kp NUMBER_9             &kp PAGE_UP      &kp PAGE_UP    &kp LC(LEFT_ARROW)         &kp UP_ARROW    &kp LC(RIGHT_ARROW)  &kp C_VOLUME_UP    &kp RGUI           &trans
        &kp LEFT_CONTROL    &kp KP_SLASH  &kp LS(LC(LEFT_ARROW))  &kp LS(LC(DOWN))      &kp LS(LC(RIGHT_ARROW))  &kp PAGE_DOWN    &kp PAGE_DOWN  &kp LEFT_ARROW             &kp DOWN_ARROW  &kp RIGHT_ARROW      &kp C_VOLUME_DOWN  &kp RIGHT_CONTROL
        &mt LEFT_ALT EQUAL  &kp NUMBER_0  &kp NUMBER_1            &kp NUMBER_2          &kp DEL                  &kp BACKSPACE    &kp HOME       &kp END                    &trans          &trans               &kp C_MUTE         &kp RIGHT_ALT
                                          &trans                  &trans                &kp LEFT_SHIFT           &lt 3 ENTER      &kp SPACE      &mt RIGHT_SHIFT BACKSPACE  &lt 3 DELETE    &kp PIPE
            >;
        };

        adjust_layer {
            bindings = <
       &none        &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
&none  &bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader  &none
       &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
       &sys_reset   &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &sys_reset
                                  &none         &trans        &none         &trans          &trans        &none         &trans        &none
            >;
        };
    };
};
